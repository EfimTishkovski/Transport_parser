import json
import time
import sqlite3
from selenium import webdriver
from selenium.webdriver.common.by import By

def func():
    file = open('temp_station_tram_data.txt', 'r')
    data = json.load(file)
    print(data)
    file.close()
    return data


def get_time_list(web_browser, URL, wait_time=2):
    """
    Функция получения времени отправления по остановке
    :param web_browser: Объект браузера
    :param URL: ссылка на страницу
    :return: словарь с днями недели и временем отправления
    """
    # Дописать цикл извлечения ссылки из входного словаря
    web_browser.get(URL)  # Подгружаем страницу
    time.sleep(wait_time)
    week_days = {1: 'Понедельник', 2: 'Вторник', 3: 'Среда', 4: 'Четверг',
                 5: 'пятница', 6: 'Суббота', 7: 'Воскресенье'}
    temp_time_1 = {}
    out_data_mass = {}
    for day in range(1, 8):
        temp_time_1.clear()
        button_monday = web_browser.find_element(By.XPATH,
                                            f'/html/body/div[2]/div/div[2]/div[4]/div/div[3]/div[2]/div[1]/button[{day}]')
        button_monday.click()  # Щёлкает по кнопкам дней недели
        time.sleep(0.1)
        data_from_timelist = web_browser.find_element(By.ID, 'schedule')
        data_mass = data_from_timelist.text.split('\n')
        data_mass.pop(0)  # Убираем первый элемент "часы минуты" это лишнее
        # Сортировка данных

        # Проверка на "не стандартные данные"
        not_standart_data_flag = False
        for i in range(0, len(data_mass) - 1):
            if len(data_mass[i]) < len(data_mass[i + 1]):
                not_standart_data_flag = True
                break
        if not_standart_data_flag:
            # Обработка стандартного массива
            for i in range(0, len(data_mass) - 1, 2):
                temp_time_1[data_mass[i]] = tuple(data_mass[i + 1].split(' '))
                out_data_mass[week_days[day]] = temp_time_1.copy()
        else:
            # Обработка сложного, не стандартного массива
            print('Задействован не стандартный алгоритм')
            out_data_mass[week_days[day]] = complex_mass(data_mass)

    print(out_data_mass)
    return out_data_mass

def complex_mass(mass):
    """
    Функция обработки нестандартного массива данных
    типа: ['12', '34', '56']
    :param mass: нестандартный массив на входе
    :return: обработанный массив на выходе
    """
    out = {}
    hour = mass[0]
    temp = []
    for i in range(1, len(mass) - 1):
        if int(mass[i]) == int(hour):
            continue
        elif int(mass[i]) < int(mass[i + 1]):
            temp.append(mass[i])
        else:
            temp.append(mass[i])
            out[hour] = tuple(temp.copy())
            hour = mass[i + 1]
            temp.clear()
    else:
        temp.append(mass[i + 1])
        out[hour] = tuple(temp.copy())
        temp.clear()
    return out

def write_base(mass, base, cursor, table):
    """
    Функция записи в базу
    :param mass: Массив данных для записи
    :param base: Объект базы
    :param base: Объект курсора
    :param table: Задействованная таблица базы
    :return:
    """
    pass


if __name__ == '__main__':

    connection = sqlite3.connect('tram_data.db')
    cursor = connection.cursor()

    query = "UPDATE tram_main_data SET time = ? WHERE time = ?"
    parametrs = (
                 "'Понедельник': {'05': ('21', '33', '46', '55'), '06': ('10', '22', '36', '41', '48', '54'), '07': ('00', '07', '13', '22', '30', '37', '43', '50', '57'), '08': ('06', '12', '19', '25', '32', '38', '45', '53'), '09': ('03', '15', '28', '42', '53'), '10': ('04', '16', '27', '37', '48', '57'), '11': ('08', '18', '28', '38', '47', '58'), '12': ('08', '19', '29', '39', '49', '59'), '13': ('09', '19', '29', '39', '50'), '14': ('00', '10', '20', '29', '42', '53'), '15': ('03', '12', '23', '33', '39', '47', '55'), '16': ('05', '12', '19', '26', '33', '38', '46', '53', '59'), '17': ('06', '12', '20', '28', '35', '43', '50', '57'), '18': ('04', '10', '16', '22', '30', '38', '51'), '19': ('03', '18', '34', '51'), '20': ('03', '17', '30', '43', '58'), '21': ('14', '29', '47'), '22': ('02', '19', '38', '54'), '23': ('10', '26', '42'), '00': ('05',)},"
                 " 'Вторник': {'05': ('21', '33', '46', '55'), '06': ('10', '22', '36', '41', '48', '54'), '07': ('00', '07', '13', '22', '30', '37', '43', '50', '57'), '08': ('06', '12', '19', '25', '32', '38', '45', '53'), '09': ('03', '15', '28', '42', '53'), '10': ('04', '16', '27', '37', '48', '57'), '11': ('08', '18', '28', '38', '47', '58'), '12': ('08', '19', '29', '39', '49', '59'), '13': ('09', '19', '29', '39', '50'), '14': ('00', '10', '20', '29', '42', '53'), '15': ('03', '12', '23', '33', '39', '47', '55'), '16': ('05', '12', '19', '26', '33', '38', '46', '53', '59'), '17': ('06', '12', '20', '28', '35', '43', '50', '57'), '18': ('04', '10', '16', '22', '30', '38', '51'), '19': ('03', '18', '34', '51'), '20': ('03', '17', '30', '43', '58'), '21': ('14', '29', '47'), '22': ('02', '19', '38', '54'), '23': ('10', '26', '42'), '00': ('05',)},"
                 " 'Среда': {'05': ('21', '33', '46', '55'), '06': ('10', '22', '36', '41', '48', '54'), '07': ('00', '07', '13', '22', '30', '37', '43', '50', '57'), '08': ('06', '12', '19', '25', '32', '38', '45', '53'), '09': ('03', '15', '28', '42', '53'), '10': ('04', '16', '27', '37', '48', '57'), '11': ('08', '18', '28', '38', '47', '58'), '12': ('08', '19', '29', '39', '49', '59'), '13': ('09', '19', '29', '39', '50'), '14': ('00', '10', '20', '29', '42', '53'), '15': ('03', '12', '23', '33', '39', '47', '55'), '16': ('05', '12', '19', '26', '33', '38', '46', '53', '59'), '17': ('06', '12', '20', '28', '35', '43', '50', '57'), '18': ('04', '10', '16', '22', '30', '38', '51'), '19': ('03', '18', '34', '51'), '20': ('03', '17', '30', '43', '58'), '21': ('14', '29', '47'), '22': ('02', '19', '38', '54'), '23': ('10', '26', '42'), '00': ('05',)},"
                 " 'Четверг': {'05': ('21', '33', '46', '55'), '06': ('10', '22', '36', '41', '48', '54'), '07': ('00', '07', '13', '22', '30', '37', '43', '50', '57'), '08': ('06', '12', '19', '25', '32', '38', '45', '53'), '09': ('03', '15', '28', '42', '53'), '10': ('04', '16', '27', '37', '48', '57'), '11': ('08', '18', '28', '38', '47', '58'), '12': ('08', '19', '29', '39', '49', '59'), '13': ('09', '19', '29', '39', '50'), '14': ('00', '10', '20', '29', '42', '53'), '15': ('03', '12', '23', '33', '39', '47', '55'), '16': ('05', '12', '19', '26', '33', '38', '46', '53', '59'), '17': ('06', '12', '20', '28', '35', '43', '50', '57'), '18': ('04', '10', '16', '22', '30', '38', '51'), '19': ('03', '18', '34', '51'), '20': ('03', '17', '30', '43', '58'), '21': ('14', '29', '47'), '22': ('02', '19', '38', '54'), '23': ('10', '26', '42'), '00': ('05',)},"
                 " 'пятница': {'05': ('21', '33', '46', '55'), '06': ('10', '22', '36', '41', '48', '54'), '07': ('00', '07', '13', '22', '30', '37', '43', '50', '57'), '08': ('06', '12', '19', '25', '32', '38', '45', '53'), '09': ('03', '15', '28', '42', '53'), '10': ('04', '16', '27', '37', '48', '57'), '11': ('08', '18', '28', '38', '47', '58'), '12': ('08', '19', '29', '39', '49', '59'), '13': ('09', '19', '29', '39', '50'), '14': ('00', '10', '20', '29', '42', '53'), '15': ('03', '12', '23', '33', '39', '47', '55'), '16': ('05', '12', '19', '26', '33', '38', '46', '53', '59'), '17': ('06', '12', '20', '28', '35', '43', '50', '57'), '18': ('04', '10', '16', '22', '30', '38', '51'), '19': ('03', '18', '34', '51'), '20': ('03', '17', '30', '43', '58'), '21': ('14', '29', '47'), '22': ('02', '19', '38', '54'), '23': ('10', '26', '42'), '00': ('05',)},"
                 " 'Суббота': {'05': ('21', '46'), '06': ('10', '33', '45', '58'), '07': ('09', '18', '28', '39', '48'), '08': ('00', '12', '21', '31', '41', '52'), '09': ('04', '16', '31', '46'), '10': ('01', '16', '31', '43', '56'), '11': ('05', '15', '24', '33', '43', '53'), '12': ('03', '12', '22', '31', '42', '50'), '13': ('01', '09', '19', '28', '39', '49', '58'), '14': ('09', '18', '27', '38', '48', '58'), '15': ('07', '18', '27', '38', '46', '55'), '16': ('04', '15', '25', '34', '44', '54'), '17': ('06', '13', '22', '31', '42', '53'), '18': ('02', '13', '22', '32', '44', '58'), '19': ('13', '27', '41', '54'), '20': ('09', '23', '37', '51'), '21': ('06', '19', '35', '51'), '22': ('06', '24', '40', '58'), '23': ('16', '32', '48'), '00': ('04',)},"
                 " 'Воскресенье': {'05': ('21', '46'), '06': ('10', '33', '45', '58'), '07': ('09', '18', '28', '39', '48'), '08': ('00', '12', '21', '31', '41', '52'), '09': ('04', '16', '31', '46'), '10': ('01', '16', '31', '43', '56'), '11': ('05', '15', '24', '33', '43', '53'), '12': ('03', '12', '22', '31', '42', '50'), '13': ('01', '09', '19', '28', '39', '49', '58'), '14': ('09', '18', '27', '38', '48', '58'), '15': ('07', '18', '27', '38', '46', '55'), '16': ('04', '15', '25', '34', '44', '54'), '17': ('06', '13', '22', '31', '42', '53'), '18': ('02', '13', '22', '32', '44', '58'), '19': ('13', '27', '41', '54'), '20': ('09', '23', '37', '51'), '21': ('06', '19', '35', '51'), '22': ('06', '24', '40', '58'), '23': ('16', '32', '48'), '00': ('04',)",
                 'https://minsktrans.by/lookout_yard/Home/Index/minsk#/routes/tram/1/stops/25852/0')
    cursor.execute(query, parametrs)
    connection.commit()

    cursor.close()
    connection.close()

"""
    for i in range(5):
        try:
            chrome_options = webdriver.ChromeOptions()
            #chrome_options.add_argument(argument='--headless')
            driver = webdriver.Chrome(options=chrome_options)
            get_time_list(driver, "https://minsktrans.by/lookout_yard/Home/Index/minsk#/routes/tram/3/stops/62208/0", wait_time=3)
            driver.quit()
            break
        except:
            print(f'страница не догружена {i}')
"""